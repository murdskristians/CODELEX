{"version":3,"sources":["../src/engine/Configuration.ts","../src/engine/Cell.ts","../src/engine/Grid.ts","../src/engine/Snake.ts","../src/engine/Game.ts","../src/GameUI.ts"],"names":[],"mappings":";;AKAA;;AAMA;;AAEA,ALRO,IKQD,ALRO,SKQE,GAAG,EAAlB,ELR6B,GAAG,EAAzB;AKSP,AJTA,AGAA,AFAA,ACAA,IESM,AJTN,IAAA,CISW,GAAG,GAAd;AJTA,ADCO,IAAM,cAAc,GAAG,EAAvB;AKUP,AJXA,AGCA,AFEA,ACAA,IEQA,AHRA,ACAA,IDAA,CCAA,CEQA,EJXA;AIWA,AJPE,ADFK,AECP,ACAA,IHDa,KAAK,ECEhB,CDFmB,GCEnB,ADFK,CCEO,CAAZ,EAAuB,CAAvB,EAAgC;AIOlC,AJNI,AGHJ,AFCA,ACAA,SFES,CAAL,EIMJ,AHRA,ACAA,CFEa,CAAT;AIUF,AJTE,ADHG,AEUL,ACVF,IHAa,KCGJ,CAAL,CISF,AHFA,ACVF,EFGa,ADHS,CCGlB,CCOF,CFVuB,AEUX,ACVd,CEYE,CAAY,ALZP,CGAP,KEYE,EAAuC,GHFvC,CGEA,CHFwC,CGES;AAC/C,AJTD,AGFH,AFAE,ACDA,ICCF,IAAA,CCWS,AHXP,ACDA,IAAA,EEYE,AHXF,CCDa,EEYG,AHXC,CACf,CCFe,GDEX,CGUJ,MFZW,CAAS,CAAT,CDEX,CAAS,ACFc,CAAZ,CDEX,ACFF,EDEe,EAAb,CADe,EAEf,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAFe,EAGf,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAHe,EAIf,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CAJe,EAKf,IAAI,UAAJ,CAAS,EAAT,EAAa,EAAb,CALe,CAAjB;AGYE,ADZJ,AFSI,ACTF,SEYO,AHHA,ACTP,IEYE,AFZF,GEYc,AFZC,CAAC,GEYd,CFZkB,CDSlB,GAAqB,MCTP,CAAS,CAAT,EAAY,CAAZ,CAAD,CDSb,CCT8B,IAAI,UAAJ,CAAS,CAAT,EAAY,CAAZ,CAAjB,CAAf;AEaE,AJVJ,AGHA,AFUG,ACTD,IEYE,KJVJ,AEFE,GCDF,CHGA,KEFE,GAAuB,IEYA,CAAC,EFZxB,GEY6B,IAAL,CAAU,IAAV,CAAe,IAAf,CAAD,CAArB;AAEA,AJpBJ,AGaE,ADNA,CFPF,EAAA,CIoBI,KFbF,CEaQ,CAAC,ADPT,IAAA,CAAY,EDNZ,GAAoB,CAApB,KEaE,CAAwB,CDP1B,EAAwC,MCOtC,EAAmC,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,CAAnC,EAA8D,KAA9D;AACA,ADfM,AFWR,ACmCD,EDnCC,EGIE,EHJF,CAAA,EEXQ,CCeA,CAAC,GDfD,ECeN,AHJF,CEXwB,AFWxB,CEXQ,GFWR,GAAA,YAAA,CAAe,CAAf;AGKC,ADfO,SAAA,OAAA,GAAmB,KAAnB;AAON,AFKF,ACVA,EDUA,ACVA,IDUA,CAAA,ACVA,CAAA,CCKO,OFKP,CAAA,ACVA,CAAA,ICKE,GAAqB,KFKvB,ACVA,GDUA,ACVA,KCKE,KFKY,ACVA,IDUd,EAAwB,GCVxB,EAAkC;AEelC,ADTE,AFKA,ACVA,EEcF,MAAA,AFdO,CEcP,ADTO,EFKE,ECVG,CCKV,EFKY,CELC,CCSf,CAAA,EDTmB,CFKV,ACVF,CEcP,AHJqB,GGIrB,CHJS,ACViB,CDUC,KELZ,CDLR,CCKL,CCSG,EHJsB,ACVU,EEcrC,AHJ2B,EGIV,AHJY,KCViB,KAAK,MAAjD,EAA0D;AEe1D,ADTA,AFI+B,ACT/B,QEcM,AFdD,CCKA,IAAL,AFI+B,ACTrB,EEcG,AHLoB,CEJrB,AFIsB,CAAH,CGKf,EDTA,EFIwB,ACTnC,CEcgB,GHLuB,CAAC,ACTrB,CDSO,CGKf,CAAY,ADThB,CAAS,ADLhB,CDS6C,EAAE,CAAC,ACTrB,CCKN,AFIwB,IGKlC,CAAuB,AHLoB,GCTlB,CEczB,AHL+C,CGK/D,AHLgE,CAAjC,EEJnB,ADLkC,CCK9C,KDLA,EAAuD;ACMvD,AFGiE,ACRjE,KDQO,GCRF,CCKA,EFGmE,ECR9D,ICKV,GAAgB,AFGhB,CEHA,CDLK,KAAmB,MAAnB,IAA6B,SAAS,KAAK,OAAhD,EAA0D;AEc1D,ADRA,AFGD,ACRC,GDMF,KGOM,AFbC,CCKA,ICQI,AFbC,GCKV,CCQI,CAAU,CDRC,GDLV,CCKL,IDLwB,GEapB,CAAuB,EFbtB,EEaD,CAAJ,CFbkC,CEaA,QFbS,KAAK,IAAhD,EAAuD;AEcrD,ADRH,ADLC,SAAK,EEaE,OFbP,GAAiB,IEaf,CAAoB,IFbtB,GEaE;AACA,AHLJ,ACRC,EDQD,CCdA,GDcA,CAAA,IGKS,KHLT,CAAA,EGKI,CAAc,OAAd,CHLJ,GAAA,UAAY,IAAZ,EAAsB,CAAU,CAAhC;AGMI,ADRJ,EAAA,IAAA,CAAA,ICQS,KDRT,CAAA,GCQI,CAAe,IDRnB,GCQI,ADRJ,YAAA;ACSI,ADRF,AFGF,ACRA,EDQA,ACRA,IDQA,CAAA,ACRA,CAAA,GEaS,ADRA,KAAK,AFGd,CAAA,ACRA,CAAA,EEaI,CAAe,ADRjB,CDLF,CDQA,ECRA,CDQA,EGKI,SFbJ,CDQA;AGMI,ADRH,AFGC,ACRA,GCGF,MDHO,EEaE,AHLA,ECRP,CAAU,EDQV,GCRA,CEaE,CAAe,OAAf;AACA,AHLH,ACRC,GDMF,MCNO,EEaE,EFbP,CAAU,IAAV,CAAe,EEab,CAAgB,EFbE,IAApB,CEaE;AACA,ADRJ,EAAA,IAAA,CAAA,ICQS,IAAL,CAAU,ADRd,CAAA,KCQI,CAAiB,IAAjB,MDRJ,GAAA,YAAA;ACSG,ADRD,AFGF,ACRE,EDQF,IAAA,CAAA,CCRO,GCKE,EDLG,GCKE,AFGd,CAAA,KCRO,IDQP,CCR0B,ECKxB,AFGF,KCRE,EAAkC,KDQpC;AEFC,AFGC,ACRE,GCGJ,QFKS,ACRA,IAAL,CDQU,ECRE,IDQd,ACRkB,UAAJ,CAAU,KAAK,IAAL,CAAU,CAAV,GAAc,CAAxB,EAA2B,KAAK,IAAL,CAAU,CAArC,CAAZ;AEaF,AHJD,ACRE,GDMH,CGME,CFdA,MAEO,IAAK,KAAK,KEYI,CAAC,GFZV,EEYe,GFZI,CEYT,CAAU,IAAV,AFZf,CEY8B,CFZG,GEYlB,CAAD,CAArB;AACD,ADPD,ADLI,ECKJ,CCLA,GDKA,CAAA,IDLS,IAAL,CCKJ,CAAA,CDLgB,IAAI,OCKpB,GAAA,ADLgB,CAAU,KAAK,ICKlB,ADLa,CAAU,CAApB,ECKhB,ADLuC,ECKd,GDLmB,IAAL,CAAU,CAAV,GAAc,CAArC,CAAZ;ACMF,AFEJ,ACPK,KAFM,IDSX,EEFW,ADLA,EDOX,ECPgB,CCKA,IDLK,GCKV,IAAgB,EDLX,ECKe,GDLI,CCKA,GDLxB,ECK6B,ADLE,QCKtC;ACQF,ADPC,AF5BH,ACuBM,CDvBN,CGmCE,CDTA,AF1BF,KGmCE,CAAA,EFZS,IAAL,GEYJ,AFZgB,CEYhB,GFZoB,UAAJ,CEYhB,AFZ0B,GEY1B,EFZ+B,IAAL,CAAU,CAApB,EEYD,AFZwB,KAAK,EEY5C,EAAgD,AFZT,CAAU,CAAV,GAAc,CAArC,CAAZ;AEaI,AFZL,KAFM,GEcD,EAAA,CFZC,EEYD,GFZM,EEYN,EFZC,EEYD,CAAA,AFZa,IAAI,UAAJ,CAAU,CEYvB,EAAA,EFZ4B,IAAL,CAAU,CAAV,GAAc,CAAxB,EAA2B,KAAK,IAAL,CAAU,CAArC,CAAZ;AEYD,ADNR,ADLC,ECKD,CDhBA,GCgBA,CAAA,CCMU,KAAA,GAAA,ADNV,CAAA,CCMU,CAAA,IDNV,CCMQ,EDNR,UAAO,IAAP,EAAmB;ACMX,ADLN,QCKe,CDLV,KCKU,GAAA,ADLf,ECKe,CAAA,ADLC,IAAI,ECKd,CDLiB,KAAK,aAAL,CAAmB,KAA1C;AAEA,ADNF,EAAA,KAAA,CAAA,CCMO,KAAL,CAAW,EDNb,CAAA,CCME,GDNF,GAAA,YAAA;AEWE,AFVA,IEUA,KFVK,EEUE,CAAC,MFVR,GEUA,CFVkB,CAAlB,CEUoB,SAApB;AACA,ADJA,ADNA,IEUA,KFVK,EEUE,CAAC,ADJA,CDNR,CAAU,GCMG,GCIb,CAAiB,AFVjB,CEUA,AFVkB,EEUE,CAApB,EAAuB,ADJf,ADNe,ECMvB,EDNA,CEUA,EAA8B,MAA9B;AACD,ADJG,ADNF,GEKF,MFLO,ECME,CAAC,CAAN,ADNF,CAAU,OAAV,CAAkB,KAAK,IAAvB;ACOI,ADNJ,SAAK,ICMI,ADNT,CAAU,ECMN,KDNJ,CAAkB,KAAK,IAAvB;AEWF,ADJM,ADNL,EEUD,CFfA,KEeA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,OAAV,EAA2C;AACnC,QAAA,EAAA,GAAA,KAAA,IAAA,CAAA,gBAAA,EAAA;AAAA,ADJJ,ADLJ,EAAA,KAAA,CESU,AFTV,GCKS,CAAL,CCIM,GAAA,CFTV,CESU,AFTV,CESU,KAAF,CFTR,GAAA,YAAA;AESQ,ADHF,ADLJ,QEQe,GFRR,ECKE,CCGM,EFRH,CEQG,CDHX,CCGW,ADHA,CCGA,AFRf,GCKI,GCGE;ADFF,ADLL,GAFD,UCOW,KAAL,IAAc,GAAd;ACIJ,ADHI,ICGJ,OAAO,CAAC,CDHC,GCGT,CDHI,CAAU,CCGC,MAAM,GAAG,CDHpB,CAAsB,CCGX,GAAe,CDHC,KAAL,CAAW,ICGrC,GDH0B,EAAtB;ACIJ,AFRF,EAAA,EEQE,GFRF,CAAA,GEQS,CAAC,KFRV,CAAA,MEQE,CFRF,EEQyB,CFRzB,OEQE,GFRM,IAAR,EAAkB;AEShB,ADJI,ADJJ,IEQA,OAAO,AFRA,CEQC,ADJA,IDJR,CCIa,ICIb,ADJQ,CAAU,ECIE,IDJZ,EAAJ,ECIJ,ADJ4B;ACK5B,ADJM,ADJP,GAFD,CEUE,OAAO,CAAC,GDJG,MCIX,CDJM,ECIc,wBAApB;AACA,ADJK,ICIL,OAAO,CAAC,QAAR,CAAiB,SAAjB,EAA4B,KAAK,GAAG,CAApC,EAAuC,MAAM,GAAG,CAAhD;AACD,AFRD,EAAA,CEAA,IFAA,CAAA,SAAA,CAAA,YAAA,GAAA,YAAA;ACPE,ADQA,WAAO,KAAK,SAAZ;AESF,ADLC,ADHA,EEQD,CDtBA,ADYA,KEUA,CAAA,SAAA,CAAA,SAAA,GAAA,UAAU,OAAV,EAA2C;AACzC,IAAA,OAAO,CAAC,IAAR,GAAe,KAAK,KAAL,GAAa,UAA5B;AACA,ADLF,ADHA,ECGA,ADHA,EEQE,EDLF,CAAA,ADHA,CAAA,GEQS,CAAC,IDLV,CAAA,ADHA,CAAA,GEQE,GAAoB,CFRtB,ECGA,CDHA,EEQE,ADLF,UDHA,ECGA;ACME,ADLA,ADHA,IEQA,IDLM,GCKC,AFRA,CEQC,ADLE,GAAG,CDHD,ICGM,ADHlB,IEQA,CDLa,CAAW,CCKD,KAAvB,CDLa,EAAb,CADF,CAGE;ACIA,AFRD,GAFD,CEUE,OAAO,CAAC,SAAR,GAAoB,wBAApB;AACA,ADJA,ICIA,IDJI,GCIG,CAAC,CDJC,OCIT,CAAiB,CDJb,CAAe,ECIE,CAAC,CDJlB,KAAwB,ECIX,GAAgB,ADJA,KAAL,CAAW,ECItB,EAAjB,EAA6C,CDJjB,CAAmB,GCIG,CDJtB,CAA5B,EAAsD,CCItD,EAAyD,KAAK,KAA9D;AACD,ADJG,ADLN,GEGE,MFHF,KAAA;ACMM,ADvDN,CAAA,EAAA,UCuDa,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","file":"GameUI.d604de4c.js","sourceRoot":"..\\static","sourcesContent":["export const CELLS_HORIZONTAL = 80;\r\nexport const CELLS_VERTICAL = 40;\r\nexport const SPEED = 100;\r\nexport const MAX_LEVEL = 10;\r\n\r\nexport interface Configuration {\r\n  level: number;\r\n  speed: number;\r\n  nbCellsX: number;\r\n  nbCellsY: number;\r\n  width: number;\r\n  height: number;\r\n  cellWidth: number;\r\n  cellHeight: number;\r\n  apples: number;\r\n}\r\n","export class Cell {\r\n  x: number;\r\n  y: number;\r\n\r\n  constructor(x: number, y: number) {\r\n    this.x = x;\r\n    this.y = y;\r\n  }\r\n}\r\n","import { Cell } from \"./Cell\";\r\nimport { Configuration } from \"./Configuration\";\r\n\r\nexport class Grid {\r\n  private configuration: Configuration;\r\n  apples: Cell[] = [\r\n    new Cell(33, 22),\r\n    new Cell(35, 22),\r\n    new Cell(37, 22),\r\n    new Cell(39, 22),\r\n    new Cell(41, 22)\r\n  ];\r\n\r\n  constructor(configuration: Configuration) {\r\n    this.configuration = configuration;\r\n  }\r\n\r\n  seed(): void {}\r\n\r\n  isAppleInside(cell: Cell): boolean {\r\n    return this.apples.find( el => el.x === cell.x && el.y === cell.y ) !== undefined;\r\n  }\r\n\r\n  removeApple(cell: Cell): void {}\r\n\r\n  isDone(): boolean {\r\n    return false;\r\n  }\r\n\r\n  getApples(): Cell[] {\r\n    return this.apples\r\n  }\r\n}\r\n","import { Cell } from \"./Cell\";\r\nimport { Direction } from \"./Direction\";\r\n\r\nexport class Snake {\r\n  head: Cell = new Cell(2, 0);\r\n  tail: Cell[] = [new Cell(0, 0), new Cell(1, 0)];\r\n  direction: Direction = \"Right\";\r\n  growCalls: number = 0;\r\n\r\n  setDirection( direction: Direction ) {\r\n    if ( this.direction === 'Right' && direction === 'Left' ) return\r\n    if ( this.direction === 'Up' && direction === 'Down' ) return\r\n    if ( this.direction === 'Left' && direction === 'Right' ) return\r\n    if ( this.direction === 'Down' && direction === 'Up' ) return\r\n    this.direction = direction;\r\n  }\r\n\r\n  move() {\r\n    this.tail.shift();\r\n    this.tail.push(this.head); \r\n\r\n    if ( this.direction === \"Right\" ) {\r\n      this.head = new Cell( this.head.x + 1, this.head.y );\r\n    } else if ( this.direction === \"Down\" ) {\r\n      this.head = new Cell( this.head.x, this.head.y + 1);\r\n    } else if ( this.direction === \"Up\" ) {\r\n      this.head = new Cell( this.head.x, this.head.y - 1);\r\n    } else this.head = new Cell( this.head.x - 1, this.head.y);\r\n  }\r\n\r\n  grow() {\r\n    this.growCalls += 3;\r\n    this.tail.unshift(this.head)\r\n    this.tail.unshift(this.head)\r\n    this.tail.unshift(this.head)\r\n  }\r\n\r\n  getHead(): Cell {\r\n    return this.head;\r\n  }\r\n\r\n  isSnake(cell: Cell): boolean {\r\n    return false;\r\n  }\r\n\r\n  getDirection(): Direction {\r\n    return this.direction;\r\n  }\r\n\r\n  getTail(): Cell[] {\r\n    return this.tail;\r\n  }\r\n}\r\n","import { Grid } from \"./Grid\";\r\nimport { Snake } from \"./Snake\";\r\nimport { Configuration, MAX_LEVEL } from \"./Configuration\";\r\nimport { Cell } from \"./Cell\";\r\n\r\nexport class Game {\r\n  private score: number = 0;\r\n  private running: boolean = false;\r\n  private grid: Grid;\r\n  private snake: Snake;\r\n  private configuration: Configuration;\r\n  private nextTick: number;\r\n\r\n  constructor(configuration: Configuration) {\r\n    this.configuration = configuration;\r\n    this.snake = new Snake();\r\n    this.grid = new Grid(this.configuration);\r\n    this.nextTick = 0;\r\n    this.running = true;\r\n  }\r\n\r\n  getSnake(): Snake {\r\n    return this.snake;\r\n  }\r\n\r\n  getConfiguration() {\r\n    return this.configuration;\r\n  }\r\n\r\n  shouldUpdate(time: number): boolean {\r\n    return this.running && time >= this.nextTick;\r\n  }\r\n\r\n  update(time: number) {\r\n    this.nextTick = time + this.configuration.speed;\r\n\r\n    this.snake.move();\r\n\r\n    switch (this.checkState()) {\r\n      case -1:\r\n        this.die();\r\n        break;\r\n      case 1:\r\n        this.snake.grow();\r\n        this.score += 100;\r\n        this.grid.removeApple(this.snake.getHead());\r\n        if (this.grid.isDone()) {\r\n          this.levelUp();\r\n        }\r\n    }\r\n  }\r\n\r\n  checkState() {\r\n    const cell = this.snake.getHead();\r\n\r\n    // left the play area or ate itself??\r\n    if (this.isOutside(cell) || this.snake.isSnake(cell)) {\r\n      // dead\r\n      return -1;\r\n    }\r\n\r\n    // ate apple?\r\n    if (this.grid.isAppleInside(cell)) {\r\n      return 1;\r\n    }\r\n\r\n    // nothing special\r\n    return 0;\r\n  }\r\n\r\n  levelUp() {\r\n    this.score += 1000;\r\n    this.configuration.level++;\r\n    if (this.configuration.level < MAX_LEVEL) {\r\n      this.configuration.speed -= 7;\r\n      this.grid.seed();\r\n    } else {\r\n      this.win();\r\n    }\r\n  }\r\n\r\n  win() {\r\n    this.stop();\r\n  }\r\n\r\n  die() {\r\n    this.stop();\r\n  }\r\n\r\n  isOutside(cell: Cell) {\r\n    const { nbCellsX, nbCellsY } = this.configuration;\r\n    return cell.x < 0 || cell.x >= nbCellsX || cell.y < 0 || cell.y >= nbCellsY;\r\n  }\r\n\r\n  getScore(): number {\r\n    return this.score;\r\n  }\r\n\r\n  getGrid(): Grid {\r\n    return this.grid;\r\n  }\r\n\r\n  stop() {\r\n    this.running = false;\r\n  }\r\n}\r\n","import {\r\n  Configuration,\r\n  CELLS_HORIZONTAL,\r\n  CELLS_VERTICAL,\r\n  SPEED\r\n} from \"./engine/Configuration\";\r\nimport { Game } from \"./engine/Game\";\r\n\r\nconst CELL_SIZE = 20;\r\nconst SCALE = 2.0;\r\n\r\nclass GameUI {\r\n  private canvas: HTMLCanvasElement;\r\n  private game: Game;\r\n\r\n  constructor(canvas: HTMLCanvasElement, game: Game) {\r\n    this.canvas = canvas;\r\n    this.game = game;\r\n    requestAnimationFrame(this.draw.bind(this));\r\n\r\n    window.addEventListener(\"keydown\", this.onKeyDown.bind(this), false);\r\n    window.focus();\r\n  }\r\n\r\n  draw(time: number) {\r\n    const context = this.canvas.getContext(\"2d\")!;\r\n    if (this.game.shouldUpdate(time)) {\r\n      this.drawBackground(context);\r\n      this.drawGrid(context);\r\n      this.drawBrand(context);\r\n      this.drawScore(context);\r\n      this.drawSnake(context);\r\n      this.drawApples(context);\r\n      this.game.update(time);\r\n    }\r\n    requestAnimationFrame(this.draw.bind(this));\r\n  }\r\n\r\n  drawBackground(context: CanvasRenderingContext2D) {\r\n    const { width, height } = this.game.getConfiguration();\r\n\r\n    context.fillStyle = \"#4caf50\";\r\n    context.fillRect(0, 0, width, height);\r\n  }\r\n\r\n  drawBrand(context: CanvasRenderingContext2D) {\r\n    const { width, height } = this.game.getConfiguration();\r\n\r\n    context.font = height / 2.5 + \"px Roboto\";\r\n    context.textBaseline = \"middle\";\r\n    context.textAlign = \"center\";\r\n    context.fillStyle = \"rgba(255,255,255,0.75)\";\r\n    context.fillText(\"CODELEX\", width / 2, height / 2);\r\n  }\r\n\r\n  drawScore(context: CanvasRenderingContext2D) {\r\n    context.font = 35 * SCALE + \"px Arial\";\r\n    context.textAlign = \"left\";\r\n    context.textBaseline = \"top\";\r\n    context.fillStyle = \"rgba(255,255,255,0.75)\";\r\n    context.fillText(game.getScore().toString(), 10 * SCALE, 10 * SCALE);\r\n  }\r\n\r\n  drawGrid(context: CanvasRenderingContext2D) {\r\n    const game = this.game;\r\n    const { width, height, cellWidth, cellHeight } = game.getConfiguration();\r\n    const lineWidth = 1 * SCALE;\r\n\r\n    context.strokeStyle = \"rgba(255,255,255,0.95)\";\r\n    context.lineWidth = lineWidth;\r\n\r\n    for (let x = 0; x <= width; x += cellWidth) {\r\n      context.beginPath();\r\n      context.moveTo(x, 0);\r\n      context.lineTo(x, height);\r\n      context.stroke();\r\n    }\r\n\r\n    for (let y = 0; y <= height; y += cellHeight) {\r\n      context.beginPath();\r\n      context.moveTo(0, y);\r\n      context.lineTo(width, y);\r\n      context.stroke();\r\n    }\r\n  }\r\n\r\n  drawApples(context: CanvasRenderingContext2D) {\r\n    const { cellWidth, cellHeight } = game.getConfiguration();\r\n    const lineWidth = 1 * SCALE;\r\n\r\n    context.fillStyle = \"#e91e63\";\r\n    const apples = game.getGrid().getApples();\r\n    apples.forEach(cell =>\r\n      context.fillRect(\r\n        cellWidth * cell.x + lineWidth,\r\n        cellHeight * cell.y + lineWidth,\r\n        cellWidth - lineWidth * 2,\r\n        cellHeight - lineWidth * 2\r\n      )\r\n    );\r\n  }\r\n\r\n  drawSnake(context: CanvasRenderingContext2D) {\r\n    const snake = this.game.getSnake();\r\n    const { cellWidth, cellHeight } = this.game.getConfiguration();\r\n    // head\r\n    const size = (CELL_SIZE * SCALE) / 10;\r\n    const offset = (CELL_SIZE * SCALE) / 3;\r\n    const x = cellWidth * snake.getHead().x;\r\n    const y = cellHeight * snake.getHead().y;\r\n    context.fillStyle = \"#111111\";\r\n    context.fillRect(x, y, cellWidth, cellHeight);\r\n    // eyes\r\n    switch (snake.getDirection()) {\r\n      case \"Up\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(x + 2 * offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Down\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + 2 * offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(\r\n          x + 2 * offset,\r\n          y + 2 * offset,\r\n          size,\r\n          0,\r\n          2 * Math.PI,\r\n          false\r\n        );\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Right\":\r\n        context.beginPath();\r\n        context.arc(x + 2 * offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(\r\n          x + 2 * offset,\r\n          y + 2 * offset,\r\n          size,\r\n          0,\r\n          2 * Math.PI,\r\n          false\r\n        );\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n      case \"Left\":\r\n        context.beginPath();\r\n        context.arc(x + offset, y + offset, size, 0, 2 * Math.PI, false);\r\n        context.arc(x + offset, y + 2 * offset, size, 0, 2 * Math.PI, false);\r\n        context.fillStyle = \"white\";\r\n        context.fill();\r\n        break;\r\n    }\r\n    // tail\r\n    context.fillStyle = \"#333333\";\r\n    const tail = snake.getTail();\r\n    tail.forEach(cell =>\r\n      context.fillRect(\r\n        cellWidth * cell.x,\r\n        cellHeight * cell.y,\r\n        cellWidth,\r\n        cellHeight\r\n      )\r\n    );\r\n  }\r\n\r\n  onKeyDown(event: KeyboardEvent) {\r\n    const snake = this.game.getSnake();\r\n    switch (event.key) {\r\n      case \"ArrowUp\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Up\");\r\n        break;\r\n      case \"ArrowDown\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Down\");\r\n        break;\r\n      case \"ArrowLeft\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Left\");\r\n        break;\r\n      case \"ArrowRight\":\r\n        event.preventDefault();\r\n        snake.setDirection(\"Right\");\r\n        break;\r\n    }\r\n  }\r\n}\r\n\r\nconst createCanvas = (): HTMLCanvasElement => {\r\n  const container = document.getElementById(\"game\")!;\r\n  const canvas = document.createElement(\"Canvas\") as HTMLCanvasElement;\r\n  container.appendChild(canvas);\r\n\r\n  // canvas element size in the page\r\n  canvas.style.width = CELLS_HORIZONTAL * CELL_SIZE + \"px\";\r\n  canvas.style.height = CELLS_VERTICAL * CELL_SIZE + \"px\";\r\n\r\n  // image buffer size\r\n  canvas.width = CELLS_HORIZONTAL * CELL_SIZE * SCALE;\r\n  canvas.height = CELLS_VERTICAL * CELL_SIZE * SCALE;\r\n\r\n  return canvas;\r\n};\r\n\r\nconst createConfiguration = (canvas: HTMLCanvasElement): Configuration => {\r\n  return {\r\n    level: 0,\r\n    speed: SPEED,\r\n    width: canvas.width,\r\n    height: canvas.height,\r\n    nbCellsX: CELLS_HORIZONTAL,\r\n    nbCellsY: CELLS_VERTICAL,\r\n    cellWidth: canvas.width / CELLS_HORIZONTAL,\r\n    cellHeight: canvas.height / CELLS_VERTICAL,\r\n    apples: 5\r\n  };\r\n};\r\n\r\nconst canvas = createCanvas();\r\nconst configuration = createConfiguration(canvas);\r\nconst game = new Game(configuration);\r\n\r\nnew GameUI(canvas, game);\r\n"]}